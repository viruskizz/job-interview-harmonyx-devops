name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
      branches: ["main"]

jobs:
  scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

    - name: Set up Python
      uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 #v5.5.0
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install semgrep safety
    # ✔️ SECURITY ISSUE: Not running security tests
    - name: Run semgrep
      working-directory: ./app
      run: |
        semgrep ci --config auto --json --json-output=semgrep.json
    - name: Run safety
      uses: pyupio/safety-action@v1
      with:
        api-key: ${{ secrets.SAFETY_API_KEY }}

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 #v2
      # ✔️ SECURITY ISSUE: Not pinning action version with SHA
    
    - name: Set up Python
      uses: actions/setup-python@e9aba2c848f5ebd159c070c61ea2c4e2b122355e #v2
      # ✔️ SECURITY ISSUE: Not pinning action version with SHA
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f app/requirements.txt ]; then pip install -r app/requirements.txt; fi
        pip install pytest
    
    - name: Run tests
      working-directory: ./app
      run: |
        pytest

    - name: Build Docker image
      working-directory: ./app
      run: |
        docker build -t user-management:${{ github.sha }} .

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        # SECURITY ISSUE: Hardcoded credentials
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: user-management
      run: |
        docker tag user-management:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
        docker tag user-management:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        # SECURITY ISSUE: Pushing latest tag

  deploy:
    needs: build
    runs-on: ubuntu-latest
    # SECURITY ISSUE: No environment-specific deployment
    # SECURITY ISSUE: No approval gate for production deployment
    
    steps:
    - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 #v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    
    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name my-cluster --region us-west-2
    
    - name: Deploy to Kubernetes
      run: |
        # SECURITY ISSUE: No validation of Kubernetes manifests
        kubectl apply -f infra/deployment.yaml
        # SECURITY ISSUE: No rollback strategy
        # SECURITY ISSUE: No verification of deployment health
    
    # SECURITY ISSUE: No DAST scanning post-deployment
    # SECURITY ISSUE: No compliance validation
